<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules/>
    <PreFlow name="PreFlow">
        <Request>
        </Request>
        <Response>
        </Response>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request>
        </Request>
        <Response>
        </Response>
    </PostFlow>
    <Flows>
        <Flow name="/pet">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet") and (request.verb = "post")</Condition>
        </Flow>
        <Flow name="/pet">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet") and (request.verb = "put")</Condition>
        </Flow>
        <Flow name="/pet/findByStatus">
            <Description>Multiple status values can be provided with comma separated strings</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet/findByStatus") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/pet/findByTags">
            <Description>Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet/findByTags") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/pet/{petId}">
            <Description>Returns a single pet</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet/{petId}") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/pet/{petId}">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet/{petId}") and (request.verb = "post")</Condition>
        </Flow>
        <Flow name="/pet/{petId}">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet/{petId}") and (request.verb = "delete")</Condition>
        </Flow>
        <Flow name="/pet/{petId}/uploadImage">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/pet/{petId}/uploadImage") and (request.verb = "post")</Condition>
        </Flow>
        <Flow name="/store/inventory">
            <Description>Returns a map of status codes to quantities</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/store/inventory") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/store/order">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/store/order") and (request.verb = "post")</Condition>
        </Flow>
        <Flow name="/store/order/{orderId}">
            <Description>For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generated exceptions</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/store/order/{orderId}") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/store/order/{orderId}">
            <Description>For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/store/order/{orderId}") and (request.verb = "delete")</Condition>
        </Flow>
        <Flow name="/user">
            <Description>This can only be done by the logged in user.</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user") and (request.verb = "post")</Condition>
        </Flow>
        <Flow name="/user/createWithArray">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/createWithArray") and (request.verb = "post")</Condition>
        </Flow>
        <Flow name="/user/createWithList">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/createWithList") and (request.verb = "post")</Condition>
        </Flow>
        <Flow name="/user/login">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/login") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/user/logout">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/logout") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/user/{username}">
            <Description></Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/{username}") and (request.verb = "get")</Condition>
        </Flow>
        <Flow name="/user/{username}">
            <Description>This can only be done by the logged in user.</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/{username}") and (request.verb = "put")</Condition>
        </Flow>
        <Flow name="/user/{username}">
            <Description>This can only be done by the logged in user.</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/user/{username}") and (request.verb = "delete")</Condition>
        </Flow>
    </Flows>
    <HTTPProxyConnection>
        <BasePath>/v2</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
    </HTTPProxyConnection>
</ProxyEndpoint>